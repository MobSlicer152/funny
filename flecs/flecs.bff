#once

{
	.ProjectName = 'flecs'
	.ProjectPath = 'flecs'

	ForEach(.BuildConfig in .BuildConfigs)
	{
		Using(.BuildConfig)

		.ObjectDir = '$Root$/obj/$CompilerName$/$ArchName$/$ConfigName$'
		.OutputDir = '$Root$/out/$CompilerName$/$ArchName$/$ConfigName$'

		.CompilerOptions + ' -DKERNEL'
		                 + ' -DECS_TARGET_POSIX'
						 + ' -DFLECS_NO_SCRIPT'
						 + ' -DFLECS_NO_CPP'
						 + ' -DFLECS_NO_OS_API_IMPL'
						 + ' -DFLECS_NO_HTTP'
						 + ' -DFLECS_NO_REST'

		Unity('$ProjectName$-Unity-Addons-$CompilerName$-$ArchName$-$ConfigName$')
		{
			.UnityInputFiles =
			{
				'$ProjectPath$/src/addons/log.c',
				'$ProjectPath$/src/addons/module.c',
				'$ProjectPath$/src/addons/timer.c',

				'$ProjectPath$/src/addons/meta/api.c',
				'$ProjectPath$/src/addons/meta/cursor.c',
				'$ProjectPath$/src/addons/meta/c_utils.c',
				'$ProjectPath$/src/addons/meta/definitions.c',
				'$ProjectPath$/src/addons/meta/meta.c',
				'$ProjectPath$/src/addons/meta/rtt_lifecycle.c',
				'$ProjectPath$/src/addons/meta/serialized.c',

				'$ProjectPath$/src/addons/parser/tokenizer.c',

				'$ProjectPath$/src/addons/pipeline/pipeline.c',
				'$ProjectPath$/src/addons/pipeline/worker.c',

				'$ProjectPath$/src/addons/query_dsl/parser.c',

				'$ProjectPath$/src/addons/system/system.c',
			}

			.UnityOutputPath = '$ObjectDir$/$ProjectPath$'
			.UnityOutputPattern = '$ProjectName$_Addons_Unity.c'
		}

		Unity('$ProjectName$-Unity-$CompilerName$-$ArchName$-$ConfigName$')
		{
			.UnityInputFiles =
			{
				'$ProjectPath$/src/datastructures/allocator.c',
				'$ProjectPath$/src/datastructures/bitset.c',
				'$ProjectPath$/src/datastructures/block_allocator.c',
				'$ProjectPath$/src/datastructures/hash.c',
				'$ProjectPath$/src/datastructures/hashmap.c',
				'$ProjectPath$/src/datastructures/map.c',
				'$ProjectPath$/src/datastructures/name_index.c',
				'$ProjectPath$/src/datastructures/sparse.c',
				'$ProjectPath$/src/datastructures/stack_allocator.c',
				'$ProjectPath$/src/datastructures/strbuf.c',
				'$ProjectPath$/src/datastructures/switch_list.c',
				'$ProjectPath$/src/datastructures/vec.c',

				'$ProjectPath$/src/query/api.c',
				'$ProjectPath$/src/query/util.c',

				'$ProjectPath$/src/query/validator.c',
				'$ProjectPath$/src/query/compiler/compiler.c',
				'$ProjectPath$/src/query/compiler/compiler_term.c',

				'$ProjectPath$/src/query/engine/cache.c',
				'$ProjectPath$/src/query/engine/cache_iter.c',
				'$ProjectPath$/src/query/engine/cache_order_by.c',
				'$ProjectPath$/src/query/engine/change_detection.c',
				'$ProjectPath$/src/query/engine/eval.c',
				'$ProjectPath$/src/query/engine/eval_iter.c',
				'$ProjectPath$/src/query/engine/eval_member.c',
				'$ProjectPath$/src/query/engine/eval_pred.c',
				'$ProjectPath$/src/query/engine/eval_toggle.c',
				'$ProjectPath$/src/query/engine/eval_trav.c',
				'$ProjectPath$/src/query/engine/eval_union.c',
				'$ProjectPath$/src/query/engine/eval_up.c',
				'$ProjectPath$/src/query/engine/eval_utils.c',
				'$ProjectPath$/src/query/engine/trav_cache.c',
				'$ProjectPath$/src/query/engine/trav_down_cache.c',
				'$ProjectPath$/src/query/engine/trav_up_cache.c',
				'$ProjectPath$/src/query/engine/trivial_iter.c',

				'$ProjectPath$/src/storage/entity_index.c',
				'$ProjectPath$/src/storage/id_index.c',
				'$ProjectPath$/src/storage/table.c',
				'$ProjectPath$/src/storage/table_cache.c',
				'$ProjectPath$/src/storage/table_graph.c',

				'$ProjectPath$/src/bootstrap.c',
				'$ProjectPath$/src/each.c',
				'$ProjectPath$/src/entity.c',
				'$ProjectPath$/src/entity_name.c',
				'$ProjectPath$/src/id.c',
				'$ProjectPath$/src/iter.c',
				'$ProjectPath$/src/misc.c',
				'$ProjectPath$/src/observable.c',
				'$ProjectPath$/src/os_api.c',
				'$ProjectPath$/src/poly.c',
				'$ProjectPath$/src/search.c',
				'$ProjectPath$/src/stage.c',
				'$ProjectPath$/src/value.c',
				'$ProjectPath$/src/world.c',
			}

			.UnityOutputPath = '$ObjectDir$/$ProjectPath$'
			.UnityOutputPattern = '$ProjectName$_Unity.c'
		}

		Library('$ProjectName$-Lib-$CompilerName$-$ArchName$-$ConfigName$')
		{
			.LibrarianOutput = '$OutputDir$/$ProjectName$.lib'

			.CompilerInputUnity =
			{
				'$ProjectName$-Unity-Addons-$CompilerName$-$ArchName$-$ConfigName$',
				'$ProjectName$-Unity-$CompilerName$-$ArchName$-$ConfigName$',
			}

			.CompilerOutputPath = '$ObjectDir$/$ProjectPath$'
		}

		// This is the main target
		Alias('$ProjectName$-$CompilerName$-$ArchName$-$ConfigName$')
		{
			.Targets = '$ProjectName$-Lib-$CompilerName$-$ArchName$-$ConfigName$'
		}
		^'Targets_$CompilerName$_$ArchName$_$ConfigName$' + {'$ProjectName$-$CompilerName$-$ArchName$-$ConfigName$'}
	}
}

