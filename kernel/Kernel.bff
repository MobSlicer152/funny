#once

{
	.ProjectName = 'kernel'
	.ProjectPath = 'kernel'
	
	ForEach(.BuildConfig in .BuildConfigs)
	{
		Using(.BuildConfig)

		.ObjectDir = '$Root$/obj/$CompilerName$/$ArchName$/$ConfigName$'
		.OutputDir = '$Root$/out/$CompilerName$/$ArchName$/$ConfigName$'

		Exec('$ProjectName$-startup-$CompilerName$-$ArchName$-$ConfigName$')
		{
			.ExecExecutable = .NASM
			.ExecInput = '$ProjectPath$/startup.asm'
			.ExecOutput = '$ObjectDir$/$ProjectPath$/startup.obj'
			.ExecArguments = .NASMOptions + ' -felf -l $ObjectDir$/$ProjectPath$/startup.lst'
			.ExecWorkingDir = '$ProjectPath$'
		}
		
		ObjectList('$ProjectName$-Objs-$CompilerName$-$ArchName$-$ConfigName$')
		{
			.CompilerInputFiles =
			{
				'$ProjectPath$/arith64.c',
				'$ProjectPath$/fpu.c',
				'$ProjectPath$/idt.c',
				'$ProjectPath$/irq.c',
				'$ProjectPath$/libc.c',
				'$ProjectPath$/main.c',
				'$ProjectPath$/screen.c',
				'$ProjectPath$/serial.c',
				'$ProjectPath$/timer.c'
			}

			.CompilerOutputPath = '$ObjectDir$/$ProjectPath$'
		}

		Executable('$ProjectName$-ELF-$CompilerName$-$ArchName$-$ConfigName$')
		{
			.Libraries =
			{
				'$ProjectName$-Objs-$CompilerName$-$ArchName$-$ConfigName$',
				'$ObjectDir$/$ProjectPath$/startup.obj'
			}

			.LinkerOptions + ' -T $ProjectPath$/kernel.ld'

			.LinkerOutput = '$OutputDir$/$ProjectName$.elf'
		}

		Exec('$ProjectName$-Flat-$CompilerName$-$ArchName$-$ConfigName$')
		{
			.ExecExecutable = .ObjCopy
			.ExecInput = '$OutputDir$/$ProjectName$.elf'
			.ExecOutput = '$OutputDir$/$ProjectName$.bin'
			.ExecArguments = '"%1"'
						   + ' "%2"'
						   + ' -O binary'
		}

		// This is the main target
		Alias('$ProjectName$-$CompilerName$-$ArchName$-$ConfigName$')
		{
			.Targets = '$ProjectName$-Flat-$CompilerName$-$ArchName$-$ConfigName$'
		}
		^'Targets_$CompilerName$_$ArchName$_$ConfigName$' + {'$ProjectName$-$CompilerName$-$ArchName$-$ConfigName$'}
	}
}

